name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether ...
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform ...
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Initialize a new or existing Terraform ...
    - name: Terraform Init
      # the | on the next line is needed to run multiple commands
      run: |
        terraform init
        # terraform workspace new dev
        terraform workspace select dev
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    # Checks that all Terraform configuration files adhere ...
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      # run: terraform plan -input=false -var-file="dev.tfvars"
      run: terraform plan -input=false -var-file="dev.tfvars" -out="website.plan"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    # Save the execution plan in an artifact
    - name: 'Upload Plan Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: website.plan
        path: website.plan
        retention-days: 2
    

    # On push to "main", build or change ...
#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#      run: terraform apply -auto-approve -input=false -var-file="dev.tfvars"
#      env:
#        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
